package com.quicktap.data.entity;
// Generated Feb 17, 2016 1:35:46 PM by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", catalog = "mydb", uniqueConstraints = { @UniqueConstraint(columnNames = "api_key"),
		@UniqueConstraint(columnNames = "username") })
public class Users implements java.io.Serializable {

	private Integer id;
	private String username;
	private String password;
	private String apiKey;
	private Set<Responses> responseses = new HashSet<Responses>(0);
	private Set<SurveyUserLinks> surveyUserLinkses = new HashSet<SurveyUserLinks>(0);

	public Users() {
	}

	public Users(String username, String password, String apiKey) {
		this.username = username;
		this.password = password;
		this.apiKey = apiKey;
	}

	public Users(String username, String password, String apiKey, Set<Responses> responseses,
			Set<SurveyUserLinks> surveyUserLinkses) {
		this.username = username;
		this.password = password;
		this.apiKey = apiKey;
		this.responseses = responseses;
		this.surveyUserLinkses = surveyUserLinkses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "username", unique = true, nullable = false, length = 45)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false, length = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "api_key", unique = true, nullable = false, length = 45)
	public String getApiKey() {
		return this.apiKey;
	}

	public void setApiKey(String apiKey) {
		this.apiKey = apiKey;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Responses> getResponseses() {
		return this.responseses;
	}

	public void setResponseses(Set<Responses> responseses) {
		this.responseses = responseses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<SurveyUserLinks> getSurveyUserLinkses() {
		return this.surveyUserLinkses;
	}

	public void setSurveyUserLinkses(Set<SurveyUserLinks> surveyUserLinkses) {
		this.surveyUserLinkses = surveyUserLinkses;
	}

}
